---
title: "An√°lisis de Capacidad Instalada y Distribuci√≥n Equitativa de Personal"
subtitle: "Sistema de Gesti√≥n de Alertas de Fraude - Septiembre 2025"
author: "An√°lisis Estad√≠stico Avanzado"
date: "`r format(Sys.Date(), '%d de %B de %Y')`"
output:
  html_document:
    toc: true
    toc_float: true
    toc_depth: 3
    theme: cosmo
    highlight: tango
    code_folding: hide
    fig_width: 12
    fig_height: 7
  pdf_document:
    toc: true
    toc_depth: 3
    number_sections: true
    fig_width: 10
    fig_height: 6
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  warning = FALSE,
  message = FALSE,
  fig.align = 'center',
  dpi = 300
)
```

```{r librerias, include=FALSE}
# Instalar y cargar paquetes necesarios
paquetes <- c("ggplot2", "dplyr", "tidyr", "scales", "viridis", 
              "patchwork", "RColorBrewer", "knitr", "kableExtra", "DT")

for(pkg in paquetes) {
  if(!require(pkg, character.only = TRUE, quietly = TRUE)) {
    install.packages(pkg, repos = "http://cran.us.r-project.org", 
                    dependencies = TRUE, quiet = TRUE)
    library(pkg, character.only = TRUE)
  }
}
```

```{r parametros, include=FALSE}
# Par√°metros globales
TOTAL_PERSONAS <- 15
DIAS_MES <- 30
NOMBRE_MES <- "Septiembre 2025"
```

```{r carga_datos, include=FALSE}
# Cargar datos
datos <- read.csv("datos_septiembre_2025_FINAL.csv")
```

```{r calculos_metricas, include=FALSE}
# Calcular todas las m√©tricas
datos <- datos %>%
  mutate(
    # Carga de trabajo
    Carga_Trabajo = Alertas_Dia / Dotacion,
    
    # Productividad
    Productividad = Gestion_Dia / Dotacion,
    
    # Capacidad te√≥rica
    Capacidad_Teorica = (Dotacion * 60) / Tiempo_Prom,
    
    # Utilizaci√≥n
    Utilizacion = (Gestion_Dia / Capacidad_Teorica) * 100,
    
    # D√©ficit
    Deficit = Gestion_Dia - Capacidad_Teorica,
    
    # Periodo
    Periodo = case_when(
      Hora >= 0 & Hora < 6 ~ "Madrugada",
      Hora >= 6 & Hora < 12 ~ "Ma√±ana",
      Hora >= 12 & Hora < 18 ~ "Tarde",
      Hora >= 18 & Hora < 24 ~ "Noche"
    ),
    
    # Estado operativo
    Estado = case_when(
      Utilizacion > 100 ~ "Sobrecarga Cr√≠tica",
      Utilizacion > 80 ~ "Sobrecarga",
      Utilizacion >= 60 ~ "√ìptimo",
      Utilizacion >= 40 ~ "Subutilizaci√≥n Leve",
      TRUE ~ "Subutilizaci√≥n Severa"
    ),
    
    Estado_Factor = factor(Estado, levels = c(
      "Subutilizaci√≥n Severa", "Subutilizaci√≥n Leve", "√ìptimo",
      "Sobrecarga", "Sobrecarga Cr√≠tica"
    ))
  )

# M√©tricas globales
total_personas_hora <- sum(datos$Dotacion)
total_alertas_dia <- sum(datos$Alertas_Dia)
total_gestiones_dia <- sum(datos$Gestion_Dia)
tiempo_prom_ponderado <- weighted.mean(datos$Tiempo_Prom, datos$Gestion_Dia)
capacidad_por_persona_hora <- 60 / tiempo_prom_ponderado
capacidad_teorica_total <- sum(datos$Capacidad_Teorica)
brecha <- total_alertas_dia - capacidad_teorica_total
utilizacion_sistema <- (total_gestiones_dia / capacidad_teorica_total) * 100
```

```{r optimizacion, include=FALSE}
# Optimizaci√≥n: Distribuci√≥n Equitativa
datos <- datos %>%
  mutate(
    # M√©todo 1: Por alertas
    Peso_Alertas = Alertas_Dia / sum(Alertas_Dia),
    Dot_Por_Alertas = pmax(1, round(Peso_Alertas * total_personas_hora)),
    
    # M√©todo 2: Por tiempo
    Peso_Tiempo = (Gestion_Dia * Tiempo_Prom) / sum(Gestion_Dia * Tiempo_Prom),
    Dot_Por_Tiempo = pmax(1, round(Peso_Tiempo * total_personas_hora)),
    
    # M√©todo 3: Por carga
    Peso_Carga = Carga_Trabajo / sum(Carga_Trabajo),
    Dot_Por_Carga = pmax(1, round(Peso_Carga * total_personas_hora)),
    
    # Dotaci√≥n √≥ptima (h√≠brida)
    Dotacion_Optima_Raw = round((Dot_Por_Alertas + Dot_Por_Tiempo + Dot_Por_Carga) / 3),
    Dotacion_Optima = pmax(1, Dotacion_Optima_Raw)
  )

# Ajuste fino
diferencia <- total_personas_hora - sum(datos$Dotacion_Optima)
if(diferencia != 0) {
  if(diferencia > 0) {
    indices <- order(datos$Carga_Trabajo, decreasing = TRUE)[1:abs(diferencia)]
    datos$Dotacion_Optima[indices] <- datos$Dotacion_Optima[indices] + 1
  } else {
    indices <- order(datos$Carga_Trabajo)[1:abs(diferencia)]
    datos$Dotacion_Optima[indices] <- pmax(datos$Dotacion_Optima[indices] - 1, 1)
  }
}

# Recalcular con dotaci√≥n √≥ptima
datos <- datos %>%
  mutate(
    Cambio = Dotacion_Optima - Dotacion,
    Carga_Optima = Alertas_Dia / Dotacion_Optima,
    Capacidad_Optima = (Dotacion_Optima * 60) / Tiempo_Prom,
    Utilizacion_Optima = (Gestion_Dia / Capacidad_Optima) * 100,
    Estado_Optimo = case_when(
      Utilizacion_Optima > 100 ~ "Sobrecarga Cr√≠tica",
      Utilizacion_Optima > 80 ~ "Sobrecarga",
      Utilizacion_Optima >= 60 ~ "√ìptimo",
      Utilizacion_Optima >= 40 ~ "Subutilizaci√≥n Leve",
      TRUE ~ "Subutilizaci√≥n Severa"
    )
  )

# M√©tricas de mejora
desv_actual <- sd(datos$Carga_Trabajo)
desv_optima <- sd(datos$Carga_Optima)
mejora_equidad <- ((desv_actual - desv_optima) / desv_actual) * 100
criticas_actual <- sum(datos$Utilizacion > 100)
criticas_optima <- sum(datos$Utilizacion_Optima > 100)
```

```{r estadisticas_periodo, include=FALSE}
stats_periodo <- datos %>%
  group_by(Periodo) %>%
  summarise(
    Horas = n(),
    Dotacion_Prom = round(mean(Dotacion), 1),
    Alertas_Total = round(sum(Alertas_Dia), 1),
    Pct_Total = round(sum(Alertas_Dia)/total_alertas_dia*100, 1),
    Carga_Prom = round(mean(Carga_Trabajo), 1),
    Utilizacion_Prom = round(mean(Utilizacion), 0),
    .groups = 'drop'
  ) %>%
  arrange(desc(Alertas_Total))
```

```{r tema_graficas, include=FALSE}
# Tema personalizado para gr√°ficas
tema_corp <- theme_minimal(base_size = 11) +
  theme(
    plot.title = element_text(face = "bold", size = 14, hjust = 0.5),
    plot.subtitle = element_text(size = 10, hjust = 0.5, color = "gray30"),
    axis.title = element_text(face = "bold", size = 11),
    legend.position = "bottom",
    panel.grid.minor = element_blank()
  )

# Colores corporativos
col_principal <- "#2C3E50"
col_alerta <- "#E74C3C"
col_exito <- "#27AE60"
col_advertencia <- "#F39C12"
col_info <- "#3498DB"
```

---

# {.tabset .tabset-fade}

## Resumen Ejecutivo

<div style="background-color: #f8f9fa; padding: 20px; border-left: 5px solid #2C3E50; margin: 20px 0;">

### üìä Datos Analizados

**Periodo:** `r NOMBRE_MES` (30 d√≠as)  
**Personal:** `r TOTAL_PERSONAS` personas  
**Volumen:** `r format(round(total_alertas_dia, 0), big.mark=",")` alertas/d√≠a (promedio)

</div>

### Hallazgos Principales

```{r resumen_boxes, results='asis'}
cat('<div style="display: flex; flex-wrap: wrap; gap: 15px; margin: 20px 0;">')

# Box 1: Capacidad
cat('<div style="flex: 1; min-width: 200px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">')
cat('<h4 style="margin: 0 0 10px 0;">Capacidad Instalada</h4>')
cat('<p style="font-size: 24px; font-weight: bold; margin: 5px 0;">',
    format(round(capacidad_teorica_total, 0), big.mark=","), '</p>')
cat('<p style="margin: 0; opacity: 0.9;">gestiones/d√≠a</p>')
cat('</div>')

# Box 2: Tasa de Atenci√≥n
tasa_atencion <- (total_gestiones_dia / total_alertas_dia) * 100
cat('<div style="flex: 1; min-width: 200px; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); color: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">')
cat('<h4 style="margin: 0 0 10px 0;">Tasa de Atenci√≥n</h4>')
cat('<p style="font-size: 24px; font-weight: bold; margin: 5px 0;">',
    round(tasa_atencion, 1), '%</p>')
cat('<p style="margin: 0; opacity: 0.9;">de alertas atendidas</p>')
cat('</div>')

# Box 3: Mejora en Equidad
cat('<div style="flex: 1; min-width: 200px; background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%); color: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">')
cat('<h4 style="margin: 0 0 10px 0;">Mejora en Equidad</h4>')
cat('<p style="font-size: 24px; font-weight: bold; margin: 5px 0;">',
    round(mejora_equidad, 1), '%</p>')
cat('<p style="margin: 0; opacity: 0.9;">con redistribuci√≥n</p>')
cat('</div>')

# Box 4: Productividad
prod_persona <- total_gestiones_dia / TOTAL_PERSONAS
cat('<div style="flex: 1; min-width: 200px; background: linear-gradient(135deg, #43e97b 0%, #38f9d7 100%); color: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">')
cat('<h4 style="margin: 0 0 10px 0;">Productividad</h4>')
cat('<p style="font-size: 24px; font-weight: bold; margin: 5px 0;">',
    round(prod_persona, 1), '</p>')
cat('<p style="margin: 0; opacity: 0.9;">gestiones/persona/d√≠a</p>')
cat('</div>')

cat('</div>')
```

### Conclusiones Clave

<div style="background-color: #d4edda; border: 1px solid #c3e6cb; border-radius: 5px; padding: 15px; margin: 15px 0;">
<h4 style="color: #155724; margin-top: 0;">‚úÖ Buenas Noticias</h4>

1. **Capacidad suficiente:** El equipo de `r TOTAL_PERSONAS` personas **S√ç es suficiente** para el volumen total
2. **Alta eficiencia:** Se atiende el **`r round(tasa_atencion, 1)`%** de las alertas
3. **Volumen manejable:** ~`r round(total_alertas_dia, 0)` alertas/d√≠a es un volumen razonable
4. **Productividad adecuada:** ~`r round(prod_persona, 1)` gestiones por persona al d√≠a

</div>

<div style="background-color: #fff3cd; border: 1px solid #ffeeba; border-radius: 5px; padding: 15px; margin: 15px 0;">
<h4 style="color: #856404; margin-top: 0;">‚ö†Ô∏è √Åreas de Mejora</h4>

1. **Distribuci√≥n desigual:** Gran variaci√≥n en carga de trabajo entre horas
2. **Horas cr√≠ticas:** `r criticas_actual` horas con sobrecarga (>100% utilizaci√≥n)
3. **Desbalance:** Algunas horas con 1 persona, otras con 12 personas
4. **Oportunidad:** Redistribuir personal puede mejorar equidad en **`r round(mejora_equidad, 1)`%**

</div>

---

## Capacidad Instalada

### An√°lisis de Capacidad del Sistema

```{r tabla_capacidad}
tabla_cap <- data.frame(
  M√©trica = c(
    "Personal Total",
    "Personas-Hora/D√≠a",
    "Alertas Recibidas/D√≠a",
    "Gestiones Realizadas/D√≠a",
    "Tasa de Atenci√≥n",
    "Tiempo Promedio Gesti√≥n",
    "Capacidad Te√≥rica Total",
    "Brecha de Capacidad",
    "Utilizaci√≥n del Sistema"
  ),
  Valor = c(
    paste(TOTAL_PERSONAS, "personas"),
    paste(total_personas_hora, "hrs"),
    paste0(format(round(total_alertas_dia, 1), big.mark=","), " alertas"),
    paste0(format(round(total_gestiones_dia, 1), big.mark=","), " gestiones"),
    paste0(round(tasa_atencion, 1), "%"),
    paste0(round(tiempo_prom_ponderado, 1), " minutos"),
    paste0(format(round(capacidad_teorica_total, 1), big.mark=","), " gestiones"),
    paste0(format(round(brecha, 1), big.mark=","), 
           ifelse(brecha > 0, " (D√âFICIT)", " (SUPER√ÅVIT)")),
    paste0(round(utilizacion_sistema, 1), "%")
  )
)

kable(tabla_cap, 
      col.names = c("M√©trica", "Valor"),
      align = c("l", "r")) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed"),
                full_width = FALSE,
                position = "center") %>%
  row_spec(0, bold = TRUE, background = "#2C3E50", color = "white") %>%
  row_spec(c(7,8,9), background = "#f8f9fa", bold = TRUE)
```

### Interpretaci√≥n

```{r interpretacion_capacidad, results='asis'}
if(brecha > 0) {
  cat('<div style="background-color: #f8d7da; border: 1px solid #f5c6cb; border-radius: 5px; padding: 15px; margin: 15px 0;">')
  cat('<h4 style="color: #721c24;">üî¥ D√©ficit de Capacidad Detectado</h4>')
  cat('<p>El sistema presenta un d√©ficit de <strong>', 
      format(round(brecha, 1), big.mark=","), 
      ' alertas/d√≠a</strong>. Se recomienda:</p>')
  cat('<ul>')
  cat('<li>Redistribuir personal seg√∫n demanda por hora</li>')
  personas_add <- ceiling(brecha / (total_gestiones_dia/TOTAL_PERSONAS))
  cat('<li>Evaluar contrataci√≥n de aproximadamente <strong>', personas_add, ' personas adicionales</strong></li>')
  cat('<li>Optimizar procesos para reducir tiempo promedio de gesti√≥n</li>')
  cat('</ul>')
  cat('</div>')
} else {
  cat('<div style="background-color: #d4edda; border: 1px solid #c3e6cb; border-radius: 5px; padding: 15px; margin: 15px 0;">')
  cat('<h4 style="color: #155724;">‚úÖ Capacidad Suficiente</h4>')
  cat('<p>El sistema tiene capacidad suficiente. El foco debe estar en <strong>optimizar la distribuci√≥n de personal</strong> por hora para mejorar la eficiencia y balance de carga.</p>')
  cat('</div>')
}
```

---

## Visualizaciones

### Gr√°fica 1: Panorama General

```{r grafica_panorama, fig.width=12, fig.height=7}
ggplot(datos, aes(x = Hora)) +
  geom_col(aes(y = Alertas_Dia, fill = "Alertas/d√≠a"), alpha = 0.6, width = 0.8) +
  geom_line(aes(y = Dotacion * 4, color = "Dotaci√≥n Actual"), size = 1.5) +
  geom_line(aes(y = Dotacion_Optima * 4, color = "Dotaci√≥n √ìptima"), 
            size = 1.5, linetype = "dashed") +
  scale_y_continuous(
    name = "Alertas por D√≠a",
    sec.axis = sec_axis(~./4, name = "Dotaci√≥n (Personas)")
  ) +
  scale_x_continuous(breaks = seq(0, 23, 2)) +
  scale_fill_manual(values = c("Alertas/d√≠a" = col_alerta)) +
  scale_color_manual(values = c(
    "Dotaci√≥n Actual" = col_info,
    "Dotaci√≥n √ìptima" = col_exito
  )) +
  labs(
    title = "Panorama General: Alertas y Distribuci√≥n de Personal",
    subtitle = paste0("Promedio diario ", NOMBRE_MES, " | ", 
                     round(total_alertas_dia, 0), " alertas/d√≠a | ",
                     TOTAL_PERSONAS, " personas"),
    x = "Hora del D√≠a",
    fill = NULL,
    color = NULL
  ) +
  tema_corp
```

<div style="background-color: #e7f3ff; padding: 10px; border-left: 4px solid #2196F3; margin: 10px 0;">
**Interpretaci√≥n:** La l√≠nea de alertas muestra la demanda por hora. Las l√≠neas de dotaci√≥n muestran c√≥mo est√° distribuido el personal actualmente vs. la distribuci√≥n √≥ptima propuesta.
</div>

### Gr√°fica 2: Comparaci√≥n de Dotaci√≥n

```{r grafica_comparacion, fig.width=12, fig.height=7}
datos_comp <- datos %>%
  select(Hora, Actual = Dotacion, √ìptima = Dotacion_Optima) %>%
  pivot_longer(cols = c(Actual, √ìptima), names_to = "Tipo", values_to = "Personas")

ggplot(datos_comp, aes(x = factor(Hora), y = Personas, fill = Tipo)) +
  geom_col(position = "dodge", width = 0.7, alpha = 0.85) +
  geom_text(data = datos %>% filter(abs(Cambio) >= 2),
            aes(x = factor(Hora), y = pmax(Dotacion, Dotacion_Optima) + 0.6,
                label = paste0(ifelse(Cambio > 0, "+", ""), Cambio)),
            inherit.aes = FALSE, size = 3, fontface = "bold", color = col_alerta) +
  scale_fill_manual(values = c("Actual" = "#95A5A6", "√ìptima" = col_exito)) +
  labs(
    title = "Distribuci√≥n Equitativa: Actual vs √ìptima",
    subtitle = paste0("Mejora en equidad: ", round(mejora_equidad, 1), 
                     "% | N√∫meros rojos = cambios ‚â•2 personas"),
    x = "Hora del D√≠a",
    y = "N√∫mero de Personas",
    fill = NULL
  ) +
  tema_corp +
  theme(axis.text.x = element_text(angle = 0))
```

<div style="background-color: #e7f3ff; padding: 10px; border-left: 4px solid #2196F3; margin: 10px 0;">
**Interpretaci√≥n:** La distribuci√≥n √≥ptima (verde) redistribuye el personal proporcionalmente a la demanda de cada hora, reduciendo la inequidad en la carga de trabajo.
</div>

### Gr√°fica 3: Carga de Trabajo por Persona

```{r grafica_carga, fig.width=12, fig.height=7}
datos_carga <- datos %>%
  select(Hora, Actual = Carga_Trabajo, √ìptima = Carga_Optima) %>%
  pivot_longer(cols = c(Actual, √ìptima), names_to = "Escenario", values_to = "Carga")

ggplot(datos_carga, aes(x = Hora, y = Carga, color = Escenario)) +
  geom_line(size = 1.5, alpha = 0.8) +
  geom_point(size = 3) +
  geom_hline(yintercept = mean(datos$Carga_Optima), 
             linetype = "dashed", color = "gray50", size = 0.8) +
  annotate("text", x = 21, y = mean(datos$Carga_Optima) + 3,
           label = paste0("Promedio √≥ptimo: ", round(mean(datos$Carga_Optima), 1)),
           color = "gray30", size = 3.5) +
  scale_color_manual(values = c("Actual" = col_alerta, "√ìptima" = col_exito)) +
  scale_x_continuous(breaks = seq(0, 23, 2)) +
  labs(
    title = "Carga de Trabajo por Persona",
    subtitle = "Alertas asignadas por persona seg√∫n hora del d√≠a",
    x = "Hora del D√≠a",
    y = "Alertas/Persona/D√≠a",
    color = NULL
  ) +
  tema_corp
```

<div style="background-color: #e7f3ff; padding: 10px; border-left: 4px solid #2196F3; margin: 10px 0;">
**Interpretaci√≥n:** La l√≠nea verde muestra c√≥mo la carga se equilibra con la redistribuci√≥n, reduciendo picos y valles extremos.
</div>

### Gr√°fica 4: Utilizaci√≥n de Capacidad

```{r grafica_utilizacion, fig.width=12, fig.height=7}
ggplot(datos, aes(x = factor(Hora))) +
  geom_col(aes(y = Utilizacion, fill = "Actual"), 
           alpha = 0.6, width = 0.4, position = position_nudge(x = -0.2)) +
  geom_col(aes(y = Utilizacion_Optima, fill = "√ìptima"),
           alpha = 0.6, width = 0.4, position = position_nudge(x = 0.2)) +
  geom_hline(yintercept = 100, color = col_alerta, size = 1, linetype = "solid") +
  geom_hline(yintercept = 80, color = col_advertencia, size = 0.8, linetype = "dashed") +
  annotate("rect", xmin = 0, xmax = 25, ymin = 60, ymax = 80, 
           alpha = 0.1, fill = col_exito) +
  annotate("text", x = 2, y = 105, label = "100% = Capacidad m√°xima", 
           color = col_alerta, size = 3, fontface = "bold") +
  scale_fill_manual(values = c("Actual" = col_info, "√ìptima" = col_exito)) +
  scale_y_continuous(labels = function(x) paste0(x, "%"),
                    limits = c(0, min(max(datos$Utilizacion, datos$Utilizacion_Optima) * 1.1, 300))) +
  labs(
    title = "Utilizaci√≥n de Capacidad",
    subtitle = "Zona verde: √≥ptimo (60-80%) | Zona naranja: sobrecarga (>80%) | L√≠nea roja: cr√≠tico (>100%)",
    x = "Hora del D√≠a",
    y = "Utilizaci√≥n de Capacidad (%)",
    fill = NULL
  ) +
  tema_corp +
  theme(axis.text.x = element_text(angle = 0))
```

<div style="background-color: #e7f3ff; padding: 10px; border-left: 4px solid #2196F3; margin: 10px 0;">
**Interpretaci√≥n:** El rango √≥ptimo de utilizaci√≥n est√° entre 60-80% (zona verde). Valores por encima de 100% indican sobrecarga cr√≠tica.
</div>

---

## Distribuci√≥n Equitativa

### Concepto de Equidad

<div style="background-color: #e3f2fd; padding: 20px; border-radius: 5px; margin: 20px 0;">

**Distribuci√≥n Equitativa ‚â† Distribuci√≥n Igual**

- **Distribuci√≥n Igual:** Todos reciben lo mismo (ej: 5 personas por hora)
- **Distribuci√≥n Equitativa:** Cada uno recibe seg√∫n su necesidad (proporcional a demanda)

La distribuci√≥n equitativa optimiza recursos y equilibra la carga de trabajo.

</div>

### Tabla de Cambios Propuestos

```{r tabla_cambios}
plan_cambios <- datos %>%
  filter(Cambio != 0) %>%
  mutate(
    Prioridad = case_when(
      abs(Cambio) >= 3 ~ "üî¥ Alta",
      abs(Cambio) >= 2 ~ "üü° Media",
      TRUE ~ "üü¢ Baja"
    ),
    Accion = ifelse(Cambio > 0, "AUMENTAR", "REDUCIR"),
    Hora_Label = sprintf("%02d:00", Hora)
  ) %>%
  select(
    Prioridad, Hora_Label, Periodo, Accion,
    `De` = Dotacion, `A` = Dotacion_Optima, Cambio,
    `Alertas/D√≠a` = Alertas_Dia, 
    `Carga Actual` = Carga_Trabajo, 
    `Carga √ìptima` = Carga_Optima
  ) %>%
  arrange(desc(abs(Cambio))) %>%
  mutate(across(where(is.numeric), ~round(., 1)))

datatable(plan_cambios,
          rownames = FALSE,
          options = list(
            pageLength = 10,
            dom = 'Bfrtip',
            buttons = c('copy', 'csv', 'excel')
          ),
          caption = "Plan de Redistribuci√≥n Priorizado") %>%
  formatStyle('Prioridad',
              target = 'row',
              backgroundColor = styleEqual(
                c("üî¥ Alta", "üü° Media", "üü¢ Baja"),
                c('#ffebee', '#fff8e1', '#e8f5e9')
              ))
```

### M√©tricas de Mejora

```{r metricas_mejora}
metricas_comp <- data.frame(
  M√©trica = c(
    "Desviaci√≥n Est√°ndar Carga",
    "Carga M√°xima",
    "Carga M√≠nima",
    "Horas en Sobrecarga (>80%)",
    "Horas Cr√≠ticas (>100%)",
    "Utilizaci√≥n Promedio"
  ),
  Actual = c(
    round(desv_actual, 1),
    round(max(datos$Carga_Trabajo), 1),
    round(min(datos$Carga_Trabajo), 1),
    sum(datos$Utilizacion > 80),
    criticas_actual,
    round(mean(datos$Utilizacion), 1)
  ),
  √ìptima = c(
    round(desv_optima, 1),
    round(max(datos$Carga_Optima), 1),
    round(min(datos$Carga_Optima), 1),
    sum(datos$Utilizacion_Optima > 80),
    criticas_optima,
    round(mean(datos$Utilizacion_Optima), 1)
  )
) %>%
  mutate(
    Mejora = √ìptima - Actual,
    `Mejora %` = round((Mejora / Actual) * 100, 1)
  )

kable(metricas_comp,
      align = c("l", "r", "r", "r", "r")) %>%
  kable_styling(bootstrap_options = c("striped", "hover"),
                full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#2C3E50", color = "white") %>%
  column_spec(4, bold = TRUE, color = "white",
              background = ifelse(metricas_comp$Mejora < 0, "#27AE60", "#E74C3C"))
```

---

## An√°lisis por Periodo

### Estad√≠sticas por Periodo del D√≠a

```{r tabla_periodo}
kable(stats_periodo,
      col.names = c("Periodo", "Horas", "Dotaci√≥n Prom.", "Alertas Total",
                   "% Total", "Carga Prom.", "Utilizaci√≥n Prom."),
      align = c("l", rep("r", 6))) %>%
  kable_styling(bootstrap_options = c("striped", "hover"),
                full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#2C3E50", color = "white") %>%
  row_spec(which(stats_periodo$Utilizacion_Prom > 80),
           background = "#ffebee")
```

### Gr√°fica: Distribuci√≥n por Periodo

```{r grafica_periodo, fig.width=10, fig.height=6}
ggplot(stats_periodo, aes(x = reorder(Periodo, -Alertas_Total))) +
  geom_col(aes(y = Alertas_Total, fill = Periodo), 
           alpha = 0.8, show.legend = FALSE, width = 0.7) +
  geom_text(aes(y = Alertas_Total, 
                label = paste0(round(Alertas_Total, 0), " alertas\n",
                              Pct_Total, "% del total")),
            vjust = -0.3, size = 4, fontface = "bold") +
  scale_fill_brewer(palette = "Set2") +
  scale_y_continuous(limits = c(0, max(stats_periodo$Alertas_Total) * 1.2)) +
  labs(
    title = "Distribuci√≥n de Alertas por Periodo del D√≠a",
    subtitle = "Volumen promedio diario por periodo",
    x = NULL,
    y = "Alertas/D√≠a"
  ) +
  tema_corp
```

---

## Horas Cr√≠ticas

### Top 10 Horas con Mayor Carga

```{r tabla_criticas}
top_criticas <- datos %>%
  arrange(desc(Carga_Trabajo)) %>%
  head(10) %>%
  mutate(Hora_Label = sprintf("%02d:00", Hora)) %>%
  select(
    `#` = Hora_Label,
    Periodo,
    Dotaci√≥n = Dotacion,
    `Alertas/D√≠a` = Alertas_Dia,
    `Carga` = Carga_Trabajo,
    `Utilizaci√≥n %` = Utilizacion
  ) %>%
  mutate(across(where(is.numeric), ~round(., 1)))

kable(top_criticas) %>%
  kable_styling(bootstrap_options = c("striped", "hover"),
                full_width = FALSE) %>%
  row_spec(0, bold = TRUE, background = "#E74C3C", color = "white") %>%
  row_spec(1:3, background = "#ffebee", bold = TRUE)
```

### Gr√°fica: Top 10 Horas Cr√≠ticas

```{r grafica_criticas, fig.width=10, fig.height=8}
top10_plot <- datos %>%
  arrange(desc(Carga_Trabajo)) %>%
  head(10) %>%
  mutate(Hora_Label = sprintf("%02d:00", Hora))

ggplot(top10_plot, aes(x = reorder(Hora_Label, Carga_Trabajo), y = Carga_Trabajo)) +
  geom_col(aes(fill = Utilizacion), width = 0.7) +
  geom_text(aes(label = round(Carga_Trabajo, 1)), 
            hjust = -0.1, size = 3.5, fontface = "bold") +
  scale_fill_gradient(low = col_advertencia, high = col_alerta,
                     labels = function(x) paste0(x, "%")) +
  coord_flip() +
  labs(
    title = "Top 10 Horas M√°s Cr√≠ticas",
    subtitle = "Mayor carga de trabajo por persona | Color = nivel de utilizaci√≥n",
    x = NULL,
    y = "Alertas/Persona/D√≠a",
    fill = "Utilizaci√≥n"
  ) +
  tema_corp +
  theme(legend.position = "right")
```

---

## Recomendaciones

### Acciones Prioritarias

<div style="background-color: #fff; padding: 20px; border: 2px solid #2C3E50; border-radius: 10px; margin: 20px 0;">

#### üéØ Corto Plazo (1-2 semanas)

```{r recomendaciones_corto, results='asis'}
aumentos_prioritarios <- datos %>%
  filter(Cambio >= 3) %>%
  arrange(desc(Cambio))

if(nrow(aumentos_prioritarios) > 0) {
  cat('<div style="background-color: #ffebee; padding: 15px; border-radius: 5px; margin: 10px 0;">')
  cat('<h5 style="color: #c62828; margin-top: 0;">üî¥ AUMENTAR DOTACI√ìN (Prioridad Alta):</h5>')
  cat('<ul>')
  for(i in 1:min(5, nrow(aumentos_prioritarios))) {
    row <- aumentos_prioritarios[i,]
    cat('<li><strong>Hora ', sprintf("%02d", row$Hora), ':00</strong> - ',
        'Aumentar de ', row$Dotacion, ' a ', row$Dotacion_Optima, ' personas ',
        '(+', row$Cambio, ') | ',
        round(row$Alertas_Dia, 0), ' alertas/d√≠a</li>')
  }
  cat('</ul>')
  cat('</div>')
}

reducciones <- datos %>%
  filter(Cambio <= -2) %>%
  arrange(Cambio)

if(nrow(reducciones) > 0) {
  cat('<div style="background-color: #fff8e1; padding: 15px; border-radius: 5px; margin: 10px 0;">')
  cat('<h5 style="color: #f57c00; margin-top: 0;">üü° REDUCIR DOTACI√ìN (Liberar recursos):</h5>')
  cat('<ul>')
  for(i in 1:min(5, nrow(reducciones))) {
    row <- reducciones[i,]
    cat('<li><strong>Hora ', sprintf("%02d", row$Hora), ':00</strong> - ',
        'Reducir de ', row$Dotacion, ' a ', row$Dotacion_Optima, ' personas ',
        '(', row$Cambio, ') | ',
        round(row$Alertas_Dia, 0), ' alertas/d√≠a</li>')
  }
  cat('</ul>')
  cat('</div>')
}
```

#### üìä Mediano Plazo (1-2 meses)

1. **Implementar fase piloto** de redistribuci√≥n
2. **Monitorear KPIs** diariamente:
   - Tiempo de primera respuesta
   - Tiempo de resoluci√≥n
   - Satisfacci√≥n del equipo
   - Calidad de gestiones
3. **Ajustar** dotaci√≥n seg√∫n resultados reales
4. **Capacitar** al personal en gesti√≥n eficiente

#### üöÄ Largo Plazo (3-6 meses)

1. **Automatizar** alertas de baja prioridad
2. **Implementar** sistema de triaje autom√°tico
3. **Reducir** tiempo promedio de gesti√≥n a <15 minutos
4. **Establecer** SLA por tipo de alerta

</div>

### Beneficios Esperados

```{r beneficios, results='asis'}
cat('<div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin: 20px 0;">')

beneficios <- list(
  list(icon = "üìä", titulo = "Mejora en Equidad", 
       valor = paste0(round(mejora_equidad, 1), "%"), 
       desc = "Reducci√≥n en desviaci√≥n de carga"),
  list(icon = "‚ö°", titulo = "Horas Cr√≠ticas", 
       valor = paste0(criticas_actual - criticas_optima), 
       desc = "Reducci√≥n de horas en sobrecarga"),
  list(icon = "üòä", titulo = "Satisfacci√≥n", 
       valor = "‚Üë", 
       desc = "Mejor balance trabajo-vida"),
  list(icon = "üí∞", titulo = "Eficiencia", 
       valor = "‚Üë", 
       desc = "Mejor uso de recursos")
)

for(b in beneficios) {
  cat('<div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 10px; text-align: center;">')
  cat('<div style="font-size: 40px;">', b$icon, '</div>')
  cat('<h4 style="margin: 10px 0;">', b$titulo, '</h4>')
  cat('<div style="font-size: 28px; font-weight: bold; margin: 10px 0;">', b$valor, '</div>')
  cat('<p style="margin: 0; opacity: 0.9; font-size: 14px;">', b$desc, '</p>')
  cat('</div>')
}

cat('</div>')
```

---

## Datos Detallados

### Tabla Completa de An√°lisis

```{r tabla_completa}
tabla_detallada <- datos %>%
  select(
    Hora,
    Periodo,
    `Dot. Actual` = Dotacion,
    `Dot. √ìptima` = Dotacion_Optima,
    Cambio,
    `Alertas/D√≠a` = Alertas_Dia,
    `Gesti√≥n/D√≠a` = Gestion_Dia,
    `Tiempo Prom.` = Tiempo_Prom,
    `Carga Actual` = Carga_Trabajo,
    `Carga √ìptima` = Carga_Optima,
    `Util. Actual` = Utilizacion,
    `Util. √ìptima` = Utilizacion_Optima,
    Estado
  ) %>%
  mutate(across(where(is.numeric), ~round(., 1)))

datatable(tabla_detallada,
          rownames = FALSE,
          filter = 'top',
          options = list(
            pageLength = 24,
            scrollX = TRUE,
            dom = 'Bfrtip',
            buttons = c('copy', 'csv', 'excel', 'print')
          ),
          caption = "Datos Completos del An√°lisis por Hora") %>%
  formatStyle(
    'Estado',
    backgroundColor = styleEqual(
      c("Subutilizaci√≥n Severa", "Subutilizaci√≥n Leve", "√ìptimo", 
        "Sobrecarga", "Sobrecarga Cr√≠tica"),
      c('#e3f2fd', '#e8f5e9', '#c8e6c9', '#fff8e1', '#ffebee')
    )
  ) %>%
  formatStyle(
    'Cambio',
    color = styleInterval(c(-0.1, 0.1), c('blue', 'black', 'red')),
    fontWeight = 'bold'
  )
```

---

## Conclusiones

### Resumen Final

<div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 15px; margin: 30px 0;">

<h3 style="margin-top: 0; text-align: center;">üìä Conclusiones del An√°lisis</h3>

<div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; margin: 20px 0;">

#### ‚úÖ Hallazgos Principales

1. **Capacidad Suficiente:** El equipo de `r TOTAL_PERSONAS` personas **es suficiente** para manejar el volumen de ~`r round(total_alertas_dia, 0)` alertas/d√≠a

2. **Alta Eficiencia:** Se logra una tasa de atenci√≥n del **`r round(tasa_atencion, 1)`%**

3. **Oportunidad de Mejora:** La redistribuci√≥n equitativa puede mejorar el balance de carga en **`r round(mejora_equidad, 1)`%**

4. **Sin Contrataciones:** No se requiere aumentar el equipo, solo **redistribuir mejor**

</div>

<div style="background: rgba(255,255,255,0.1); padding: 20px; border-radius: 10px; margin: 20px 0;">

#### üéØ Acci√≥n Inmediata Recomendada

**Implementar distribuci√≥n equitativa propuesta:**

- Redistribuir personal seg√∫n demanda horaria
- Priorizar horas cr√≠ticas identificadas
- Monitorear impacto durante 2-4 semanas
- Ajustar seg√∫n resultados

</div>

<div style="text-align: center; margin-top: 30px; font-size: 18px;">
<strong>El problema NO es de cantidad, es de DISTRIBUCI√ìN</strong>
</div>

</div>

### Pr√≥ximos Pasos

```{r proximos_pasos, results='asis'}
pasos <- data.frame(
  Fase = c("Semana 1", "Semana 2-4", "Mes 2", "Mes 3+"),
  Accion = c(
    "Presentar informe al gerente y obtener aprobaci√≥n",
    "Implementar redistribuci√≥n en fase piloto",
    "Monitorear KPIs y ajustar seg√∫n necesidad",
    "Optimizar procesos y automatizar donde sea posible"
  ),
  Responsable = c(
    "Equipo de An√°lisis",
    "Gerencia + Supervisores",
    "Equipo de Operaciones",
    "Equipo de Tecnolog√≠a"
  )
)

kable(pasos) %>%
  kable_styling(bootstrap_options = c("striped", "hover"),
                full_width = TRUE) %>%
  row_spec(0, bold = TRUE, background = "#2C3E50", color = "white") %>%
  column_spec(1, bold = TRUE, width = "15%") %>%
  column_spec(2, width = "55%") %>%
  column_spec(3, width = "30%")
```

---

<div style="background-color: #f8f9fa; padding: 20px; border-top: 3px solid #2C3E50; margin-top: 40px;">

### üìû Informaci√≥n de Contacto

Para dudas o mayor informaci√≥n sobre este an√°lisis:

- **Fecha de generaci√≥n:** `r format(Sys.Date(), '%d de %B de %Y')`
- **Periodo analizado:** `r NOMBRE_MES`
- **Herramienta:** R Markdown

---

<p style="text-align: center; color: #6c757d; font-size: 12px; margin-top: 20px;">
Informe generado autom√°ticamente mediante an√°lisis estad√≠stico avanzado<br>
¬© 2025 - An√°lisis de Dotaci√≥n y Capacidad Instalada
</p>

</div>

---

## Anexo: C√≥digo R

```{r codigo, echo=TRUE, eval=FALSE}
# Este informe fue generado utilizando el siguiente c√≥digo:

# 1. Cargar datos
datos <- read.csv("datos_septiembre_2025_FINAL.csv")

# 2. Calcular m√©tricas
datos <- datos %>%
  mutate(
    Carga_Trabajo = Alertas_Dia / Dotacion,
    Capacidad_Teorica = (Dotacion * 60) / Tiempo_Prom,
    Utilizacion = (Gestion_Dia / Capacidad_Teorica) * 100
  )

# 3. Optimizar distribuci√≥n
datos <- datos %>%
  mutate(
    Peso = Alertas_Dia / sum(Alertas_Dia),
    Dotacion_Optima = pmax(1, round(Peso * sum(Dotacion)))
  )

# 4. Generar visualizaciones con ggplot2
# 5. Exportar resultados
```

<div style="background-color: #e7f3ff; padding: 15px; border-left: 4px solid #2196F3; margin: 15px 0;">
**Nota:** Para reproducir este an√°lisis, ejecuta el archivo `.Rmd` con los datos actualizados.
</div>
